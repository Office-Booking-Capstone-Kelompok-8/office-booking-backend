name: deploy-dev

on:
  push:
    branches: [develop]

jobs:
  update-doc:
    name: Update Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: SCP documentation to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: ./docs
          target: ./office-zone

  build-app:
    name: Build Development Binary
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build docker image
        run: |
          docker build -t suryawarior44/office-zone:dev . -f build/main/Dockerfile
          docker save -o dev.tar suryawarior44/office-zone:dev
      - name: SCP docker image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: dev.tar
          target: ./office-zone

  build-cron:
    name: Build Development Cron Service Binary
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build docker image
        run: |
          docker build -t suryawarior44/office-zone-cron:dev . -f build/cron/Dockerfile
          docker save -o dev-cron.tar suryawarior44/office-zone-cron:dev
      - name: SCP docker image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: dev-cron.tar
          target: ./office-zone
 
  deploy-app:
    needs: [build-app]
    name: Deploy Development Server
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Run docker image on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd ./office-zone
            docker load -i dev.tar
            rm dev.tar
            sudo docker compose kill dev
            sudo docker compose up -d dev
            docker system prune -f

  deploy-cron:
    needs: [build-cron]
    name: Deploy Cron Service on Development Server
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - name: Run docker image on server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd ./office-zone
            docker load -i dev-cron.tar
            rm dev-cron.tar
            sudo docker compose kill dev-cron
            sudo docker compose up -d dev-cron
            docker system prune -f